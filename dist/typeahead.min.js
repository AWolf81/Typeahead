/*! typeahead 2015-09-20 */
function UtilityFactory(){return{callerFunction:callerFunction}}function callerFunction(){return callerFunction.caller.caller}!function(){"use strict";function a(a){function b(b,c,d){function e(c){c&&a(function(){f.focus()},b.$eval(d.focusDelay)||0)}var f=c[0];d.focusIf?b.$watch(d.focusIf,focus):e(!0)}return{restrict:"A",link:b}}angular.module("utils.focus-if",[]).directive("focusIf",a),a.$inject=["$timeout"]}(),angular.module("utils",[]).factory("utility",UtilityFactory),function(){"use strict";angular.module("pdTypeahead",["pdMousetrapModule","utils","utils.focus-if","pdTypeahead.defaultOptions","typeahead.tpls"])}(),function(){"use strict";function a(a,b,c){function d(){var d=b.defer();return a.get(c).success(function(a){var b=a.map(function(a,b){return{selected:!1,value:a}});d.resolve(b)}).error(function(a){d.reject(a)}),d.promise}var e={getData:d};return e}angular.module("pdTypeahead").factory("pdTypeaheadDataService",a),a.$inject=["$http","$q","DATA_SERVICE"]}(),angular.module("pdTypeahead.defaultOptions",[]).constant("TYPEAHEAD_OPTIONS",{autofocus:!0}),function(){function a(a,b,c,d,e,f){function g(a,b,c,e){function g(a){return t.results?t.results.indexOf(a):0}function h(){return t.results.length}function i(b){angular.forEach(b,function(b){a.$on(b.name,b.handler)})}function j(){var a=s();t.filterData(""),i(a),t.visible=b.visible||!1}function k(){return t.doAutofocus?'focus-if=""':""}function l(){t.setVisible(!1)}function m(a){t.selectedNameIndex=a,angular.forEach(t.results,function(b,c){b.selected=!1,c===a&&(b.selected=!0,t.selectModel=b,document.getElementsByClassName("dropdown-menu")[0].scrollTop=document.getElementsByClassName("active")[0].offsetTop-248)})}function n(a){t.visible=a,console.log("setVisible caller = ",e.callerFunction()),console.log("updated visible",t.visible,a)}function o(a){t.sterm=a.value}function p(){l()}function q(a){t.results=d("filter")(t.cinfo,a),t.results=d("limitTo")(t.results||[],100),t.nothing=a.length>0&&0===t.results.length,c.setSelected(g(a)),c.setMax(h()),t.selectedNameIndex=c.getSelected()}function r(){t.setVisible(!0)}function s(){return[{name:"pd.typeahead:enter",handler:function(a,b){t.setVisible(!1)}},{name:"pd.typeahead:backspace",handler:function(a,b){r()}},{name:"pd.typeahead:updatedIndex",handler:function(b,c){t.updateSelection(c),r(),a.$apply()}},{name:"pd.typeahead:close",handler:function(){l(),a.$apply()}},{name:"pd.typeahead:applySelection",handler:function(b,c){t.results[c]&&(t.updateSearchTerm(t.results[c]),a.$apply())}}]}var t=this;console.log("autofocus",b.doAutofocus||f.autofocus),angular.extend(this,{checkAutofocus:k,close:p,doAutofocus:b.doAutofocus||f.autofocus,filterData:q,ngOptions:{},ngModel:b.ngModel,selectedNameIndex:0,sterm:"",setVisible:n,updateSearchTerm:o,updateSelection:m,visible:b.visible||!1}),j(),a.$watch(function(){return t.results},function(a){var b=a.length;b&&(c.setMax(b),t.updateSelection(c.getSelected()),b>1&&(t.setVisible(!0),t.results[0].selected=!0,t.selectModel||(t.selectModel=t.results[0]),console.log("autoselect first",t.selectModel)))})}function h(a){return'<div class="form-group col-sm-10" pd-mousetrap = ""><input class="form-control" type="search" id="idSearch"ng-model="typeAheadCtrl.sterm"'+c("{{typeAheadCtrl.checkAutofocus()}}")(a)+'ng-change="typeAheadCtrl.filterData(typeAheadCtrl.sterm)"" placeholder="Enter Search Term"/><div ng-show="typeAheadCtrl.nothing">Nothing found!</div><div class="nav dropdown" ng-hide="typeAheadCtrl.nothing"><ul ng-show="typeAheadCtrl.visible"class="dropdown-menu limitHeight"><li ng-repeat="data in typeAheadCtrl.results track by $index"><a href="#" ng-model="selectModel" ng-class="{active: data.selected}"ng-click="typeAheadCtrl.updateSearchTerm(data)">{{data.value}}</a></li></ul></div></div>'}function i(a,c,d,e){a.ngOptions=d.typeAhead,console.log(a.ngOptions,a.dataToPopulate);var f=h(a);c.replaceWith(b(f)(a)),a.$watch(function(){return e.visible},function(a){console.log(a),a?$(".dropdown").addClass("open"):$(c).find(".dropdown.open").removeClass("open")})}var j={restrict:"A",replace:!1,controllerAs:"typeAheadCtrl",controller:g,bindToController:{cinfo:"=datalist",selectModel:"=",visible:"=",doAutofocus:"@"},link:i};return g.$inject=["$scope","$attrs","pdTypeaheadSelectService","utility"],j}angular.module("pdTypeahead").directive("typeAhead",a),a.$inject=["$parse","$compile","$interpolate","$filter","utility","TYPEAHEAD_OPTIONS"]}(),function(){"use strict";function a(a){var b=0,c=0,d={setSelected:function(a){b=a},setMax:function(a){c=a},getSelected:function(){return b},moveUp:function(){b>0&&b--,a.$broadcast("pd.typeahead:updatedIndex",b)},moveDown:function(){c-1>b&&b++,a.$broadcast("pd.typeahead:updatedIndex",b)},applySelection:function(){a.$broadcast("pd.typeahead:applySelection",b)}};return d}angular.module("pdTypeahead").factory("pdTypeaheadSelectService",a),a.$inject=["$rootScope"]}(),function(){"use strict";function a(a,b){function c(){var a=e();angular.forEach(a,function(a){Mousetrap.bind(a.keys,a.handler)}),Mousetrap.stopCallback=d}function d(){return!1}function e(){return[{keys:["right","down"],handler:function(){b.moveDown()}},{keys:["left","up"],handler:function(){b.moveUp()}},{keys:"enter",handler:function(){a.$broadcast("pd.typeahead:enter"),b.applySelection()}},{keys:"backspace",handler:function(){a.$broadcast("pd.typeahead:backspace")}},{keys:"escape",handler:function(){a.$broadcast("pd.typeahead:close")}}]}var f={restrict:"A"};return c(),f}angular.module("pdMousetrapModule",[]).directive("pdMousetrap",a),a.$inject=["$rootScope","pdTypeaheadSelectService"]}(),angular.module("typeahead.tpls",[]).run(["$templateCache",function(a){}]);